{"version":3,"sources":["app/App.module.css","todos/TodoTypes.ts","todos/TodoCreator.tsx","todos/TodoList.tsx","todos/Todos.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","TodoStatus","TodoCreator","onAdd","useState","title","setTitle","Form","onSubmit","e","preventDefault","todo","id","Date","now","status","TO_DO","FormGroup","InputGroup","Input","autoFocus","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","type","disabled","TodoList","todos","onDone","onDelete","ListGroup","map","ListGroupItem","data-testid","style","display","justifyContent","alignItems","onClick","Todos","setTodos","activeTab","setActiveTab","handleDelete","todoId","current","filter","Container","newTodo","Nav","tabs","NavItem","NavLink","active","DONE","TabContent","TabPane","tabId","App","className","styles","appRoot","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dabfad7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appRoot\":\"App_appRoot__2nHW4\"};","export enum TodoStatus {\n  TO_DO = 'To Do',\n  DONE = 'Done',\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  status: TodoStatus;\n}\n","import { useState } from 'react';\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Form,\n  FormGroup,\n} from 'reactstrap';\nimport { Todo, TodoStatus } from './TodoTypes';\n\ninterface TodoCreatorProps {\n  onAdd: (todo: Todo) => void;\n}\n\nfunction TodoCreator({ onAdd }: TodoCreatorProps) {\n  const [title, setTitle] = useState<string>('');\n\n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n        const todo = {\n          id: Date.now(),\n          title,\n          status: TodoStatus.TO_DO,\n        };\n        onAdd(todo);\n        setTitle('');\n      }}\n    >\n      <FormGroup>\n        <InputGroup>\n          <Input\n            autoFocus={true}\n            placeholder=\"Enter todo title...\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button color=\"success\" type=\"submit\" disabled={!title}>\n              Add\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </FormGroup>\n    </Form>\n  );\n}\n\nexport default TodoCreator;\n","import { Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport { Todo, TodoStatus } from './TodoTypes';\n\ninterface TodoListProps {\n  todos: Todo[];\n  onDone?: (todoId: number) => void;\n  onDelete: (todoId: number) => void;\n}\n\nfunction TodoList({ todos, onDone, onDelete }: TodoListProps) {\n  return (\n    <ListGroup>\n      {todos.map((todo) => (\n        <ListGroupItem\n          key={todo.id}\n          data-testid={`todolist-item-${todo.id}`}\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          {todo.title}\n          <div>\n            {todo.status === TodoStatus.TO_DO && (\n              <Button color=\"transparent\" onClick={() => onDone?.(todo.id)}>\n                ✅\n              </Button>\n            )}\n            <Button color=\"transparent\" onClick={() => onDelete(todo.id)}>\n              ❌\n            </Button>\n          </div>\n        </ListGroupItem>\n      ))}\n    </ListGroup>\n  );\n}\n\nexport default TodoList;\n","import { useState } from 'react';\nimport {\n  Container,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n} from 'reactstrap';\nimport TodoCreator from '../todos/TodoCreator';\nimport TodoList from '../todos/TodoList';\nimport { Todo, TodoStatus } from '../todos/TodoTypes';\n\nfunction Todos() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [activeTab, setActiveTab] = useState<TodoStatus>(TodoStatus.TO_DO);\n\n  function handleDelete(todoId: number) {\n    setTodos((current) => current.filter((todo) => todo.id !== todoId));\n  }\n\n  return (\n    <Container>\n      <TodoCreator\n        onAdd={(newTodo) => setTodos((current) => [...current, newTodo])}\n      />\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            active={activeTab === TodoStatus.TO_DO}\n            onClick={() => setActiveTab(TodoStatus.TO_DO)}\n          >\n            To Do\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            active={activeTab === TodoStatus.DONE}\n            onClick={() => setActiveTab(TodoStatus.DONE)}\n          >\n            Done\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane\n          tabId={TodoStatus.TO_DO}\n          data-testid={`todos-tab-${TodoStatus.TO_DO}`}\n        >\n          <TodoList\n            todos={todos.filter((todo) => todo.status === TodoStatus.TO_DO)}\n            onDone={(todoId) =>\n              setTodos((current) =>\n                current.map((todo) =>\n                  todo.id === todoId\n                    ? { ...todo, status: TodoStatus.DONE }\n                    : todo,\n                ),\n              )\n            }\n            onDelete={handleDelete}\n          />\n        </TabPane>\n        <TabPane\n          tabId={TodoStatus.DONE}\n          data-testid={`todos-tab-${TodoStatus.DONE}`}\n        >\n          <TodoList\n            todos={todos.filter((todo) => todo.status === TodoStatus.DONE)}\n            onDelete={handleDelete}\n          />\n        </TabPane>\n      </TabContent>\n    </Container>\n  );\n}\n\nexport default Todos;\n","import { Container } from 'reactstrap';\nimport Todos from '../todos/Todos';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <Container className={styles.appRoot}>\n      <Todos />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}